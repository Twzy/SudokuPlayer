1.先将所有的格子进行如下定义，每个格子叫square，每行叫row，每列叫column，
  一个square所关联的Row，column，和那个九宫格都叫做Unit，而这些row，
  column和Unit的总和叫做Peers。
2.对于空的格子，每个格子都会有123456789出现的情况，而已经选定的格子，则
  值是唯一的。开始计算时，先选定有数字的格子，然后在这个格子所在的Peers
  中删除这个数字。比如在第一行的第一个是1，第二个的可能性是123456789，
  那么在第二个的可能性里面删除1，变成23456789。
3.遍历每个值未定的square，找到格子中可选值最少的返回，如果是可选数为1，
  则该格子唯一被确定，并删除Peers中其他格子中的该值得选项，
4.如果获取的格子可选数大于1，则选择其中的一个值，作为确定值，并把其他值
  连同坐标，以及当前整个软件中的每个格子的情况进行记录，然后推送到栈结
  构中，然后继续执行，
5.如果返回格子的可选值为空，这是因为刚才选择的值有问题，所以需要进行一次
  出栈操作，提取剩余值，并将软件中每个格子的值初始到记录该值之前，继续
  进行判断，直到每个格子中有符合规则的唯一的值时，既可以判定计算完成。
6.如果返回的格子可选值为空，而栈中的值也为空，那么就可以判断该数独无解。